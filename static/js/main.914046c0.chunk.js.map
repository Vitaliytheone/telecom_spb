{"version":3,"sources":["components/Product.js","App.js","serviceWorker.js","index.js"],"names":["Product","state","amount","amountType","handleChangeAmountType","_this","setState","handleChangeAmount","event","value","target","prevState","isNaN","handleAmountIncrement","handleAmountDecrement","_this$state","this","product","props","react_default","a","createElement","className","src","primaryImageUrl","alt","code","href","description","assocProducts","map","assoc","priceRetailAlt","priceRetail","version","id","x","y","width","height","viewBox","enable-background","fill","d","priceGoldAlt","priceGold","concat","onClick","onChange","data-product-id","class","Component","products","initialProducts","Object","objectSpread","split","App","index","components_Product","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.914046c0.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Product extends Component {\r\n  state = {\r\n    amount: 1,\r\n    amountType: 1\r\n  }\r\n\r\n  handleChangeAmountType = (amountType) => () => {\r\n    this.setState({amountType});\r\n  }\r\n\r\n  handleChangeAmount = (event) => {\r\n    const value = + event.target.value;\r\n    this.setState((prevState) => ({\r\n      amount: isNaN(value) ? prevState.amount : value\r\n    }));\r\n  }\r\n\r\n  handleAmountIncrement = () => {\r\n    this.setState((prevState) => ({\r\n      amount: + prevState.amount + 1\r\n    }));\r\n  }\r\n\r\n  handleAmountDecrement = () => {\r\n    this.setState((prevState) => ({\r\n      amount: + prevState.amount === 0 ? prevState.amount : prevState.amount - 1\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const {amountType, amount} = this.state;\r\n    const {product} = this.props;\r\n    return (<div className=\"wrapper\">\r\n      <div className=\"description\">\r\n        <img className=\"description__image\" src={product.primaryImageUrl} alt=\"product\"/>\r\n        <div className=\"description__text\">\r\n          <div className=\"description__text_code\">Код: {product.code}</div>\r\n          <div className=\"description__text_name\">\r\n            <a href=\"#\">\r\n              {product.description}\r\n            </a>\r\n          </div>\r\n          <div className=\"description__text_extra\">\r\n            <span className=\"description__text_extra--need\">\r\n              Могут понадобиться:\r\n            </span>\r\n            <span>\r\n              {product.assocProducts.map(assoc => (<a href=\"#\">{assoc};</a>))}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"cost\">\r\n        <span className=\"cost__product-status\">Наличие</span>\r\n        <div className=\"cost__product-card\">\r\n          <div className=\"cost__product-card_club-card\">По карте клуба</div>\r\n          <div className=\"cost__product-card_gold-price\">\r\n            <span>{amountType === 1  ? product.priceRetailAlt  : product.priceRetail}</span>\r\n            <span>\r\n              <svg version=\"1.0\" id=\"Слой_1\" x=\"0px\" y=\"0px\" width=\"27px\" height=\"20px\" viewBox=\"0 0 50 50\" enable-background=\"new 0 0 50 50\">\r\n                <path fill=\"#010101\" d=\"M28.109,29.658c5.173,0.578,10.357-0.979,14.355-4.312c4.172-4.748,5.151-11.509,2.499-17.246\r\n      c-0.847-1.953-2.2-3.644-3.92-4.899c-1.813-1.204-3.872-1.991-6.026-2.303c-2.464-0.37-4.955-0.534-7.447-0.49H9.05v23.272H3.562\r\n      v5.781H9.05v5.977H3.562v5.781H9.05v8.378h6.467v-8.133h20.088v-5.781H15.517v-6.026H28.06H28.109z M15.566,6.386h12.543\r\n      c2.019-0.074,4.04,0.074,6.026,0.441c1.673,0.442,3.132,1.467,4.116,2.891c1.062,1.539,1.611,3.373,1.568,5.242\r\n      c0.138,2.473-0.832,4.879-2.646,6.565c-2.601,1.812-5.76,2.645-8.917,2.352H15.517V6.386H15.566z\"/>\r\n              </svg>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"cost__retail-price\">\r\n          <span>{amountType === 1? product.priceGoldAlt: product.priceGold}</span>\r\n          <span>\r\n            <svg version=\"1.0\" id=\"Слой_1\" x=\"0px\" y=\"0px\" width=\"27px\" height=\"20px\" viewBox=\"0 0 50 50\" enable-background=\"new 0 0 50 50\">\r\n              <path fill=\"rgb(167, 167, 167)\" d=\"M28.109,29.658c5.173,0.578,10.357-0.979,14.355-4.312c4.172-4.748,5.151-11.509,2.499-17.246\r\n      c-0.847-1.953-2.2-3.644-3.92-4.899c-1.813-1.204-3.872-1.991-6.026-2.303c-2.464-0.37-4.955-0.534-7.447-0.49H9.05v23.272H3.562\r\n      v5.781H9.05v5.977H3.562v5.781H9.05v8.378h6.467v-8.133h20.088v-5.781H15.517v-6.026H28.06H28.109z M15.566,6.386h12.543\r\n      c2.019-0.074,4.04,0.074,6.026,0.441c1.673,0.442,3.132,1.467,4.116,2.891c1.062,1.539,1.611,3.373,1.568,5.242\r\n      c0.138,2.473-0.832,4.879-2.646,6.565c-2.601,1.812-5.76,2.645-8.917,2.352H15.517V6.386H15.566z\"/>\r\n            </svg>\r\n          </span>\r\n        </div>\r\n        <div className=\"cost__np-binding\">Можно купить за 231,75 балла</div>\r\n        <div className=\"cost__unit-wrapper\">\r\n          <span className={`cost__unit-wrapper_box ${amountType === 1 && 'isActive'}`} onClick={this.handleChangeAmountType(1)}>\r\n            За м. кв.\r\n          </span>\r\n          <span className={`cost__unit-wrapper_box ${amountType === 2 && 'isActive'}`} onClick={this.handleChangeAmountType(2)}>\r\n            За упаковку\r\n          </span>\r\n        </div>\r\n        <div className=\"cost__list-unit\">\r\n          <div className=\"cost__list-unit_unit-icon\"></div>\r\n          <div className=\"cost__list-unit_unit-cost\">Продается упаковками: 1 упак. = 2.47 м. кв.</div>\r\n        </div>\r\n        <div className=\"cost__product-wrapper\">\r\n          <div className=\"cost__product-wrapper_count\">\r\n            <input className=\"cost__product-wrapper_count--counter\" value={amount} onChange={this.handleChangeAmount}/>\r\n            <div className=\"cost__product-wrapper_count--arrows\">\r\n              <div className=\"arrow arrow-up\" onClick={this.handleAmountIncrement}></div>\r\n              <div className=\"arrow arrow-down\" onClick={this.handleAmountDecrement}></div>\r\n            </div>\r\n          </div>\r\n          <button data-product-id={product.id} className=\"cost__product-wrapper_cart-name\">\r\n            <span>\r\n              <svg class=\"cart-svg\" width=\"18\" height=\"18\" viewBox=\"0 0 16 16\">\r\n                <path fill=\"#fff\" d=\"M14 13.1v-1.1h-9.4l0.6-1.1 9.2-0.9 1.6-6h-12.3l-0.7-3h-3v1h2.2l2.1 8.4-1.3 2.6v1.5c0 0.8 0.7 1.5 1.5 1.5s1.5-0.7 1.5-1.5-0.7-1.5-1.5-1.5h7.5v1.5c0 0.8 0.7 1.5 1.5 1.5s1.5-0.7 1.5-1.5c0-0.7-0.4-1.2-1-1.4zM4 5h10.7l-1.1 4-8.4 0.9-1.2-4.9z\"></path>\r\n              </svg>\r\n            </span>\r\n            <span>В КОРЗИНУ</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default Product\r\n","import React, { Component } from 'react';\nimport './App.scss';\nimport initialProducts from './products.json';\nimport Product from './components/Product';\n\nconst products = initialProducts.map(product => ({\n  ...product,\n  assocProducts: product.assocProducts.split(';')\n}));\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        { products.map((product, index) => <Product key={index} product={product} />)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}